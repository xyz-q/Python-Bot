import discord
from discord.ext import commands, tasks
import requests
from bs4 import BeautifulSoup
import time

class SteamDBCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.last_changelist = None
        self.check_for_updates.start()

    def cog_unload(self):
        self.check_for_updates.cancel()

    @tasks.loop(minutes=1)
    async def check_for_updates(self):
        changelists = await self.fetch_changelist()

        if changelists:
            latest_changelist = changelists[0]
            if latest_changelist != self.last_changelist:
                channel = self.bot.get_channel(1257645614263570493)
                embed = discord.Embed(title="New CS:GO Changelist", color=discord.Color.green())
                embed.add_field(name="Update Type", value=latest_changelist['update_type'], inline=False)
                embed.add_field(name="Description", value=latest_changelist['description'], inline=False)
                await channel.send(embed=embed)
                self.last_changelist = latest_changelist

    async def fetch_changelist(self):
        url = "https://steamdb.info/app/730/history/"
        headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
        }
        response = await self.bot.session.get(url, headers=headers)
        soup = BeautifulSoup(await response.text(), 'html.parser')

        # Find the changelist table
        table = soup.find('table', {'class': 'app_history_table'})

        # Extract the rows from the table
        rows = table.find_all('tr')
        changelists = []

        for row in rows[1:]:  # Skip the header row
            cols = row.find_all('td')
            if len(cols) > 1:
                changelist = {
                    'time': cols[0].text.strip(),
                    'update_type': cols[1].text.strip(),
                    'description': cols[2].text.strip()
                }
                changelists.append(changelist)

        return changelists

async def setup(bot):
    await bot.add_cog(SteamDBCog(bot))
