import discord
from discord.ext import commands, tasks
import aiohttp
from bs4 import BeautifulSoup
import asyncio
from datetime import datetime, timezone

class SteamDBCommand(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.last_change = None
        self.session = aiohttp.ClientSession()
        self.check_for_updates.start()

    def cog_unload(self):
        self.check_for_updates.cancel()
        self.session.close()

    @tasks.loop(minutes=1)
    async def check_for_updates(self):
        url = "https://steamdb.info/app/730/history/"
        async with self.session.get(url) as response:
            soup = BeautifulSoup(await response.text(), "html.parser")

            change_list = soup.fin            
            if change_list:
                old_change = soup.find("div", {"class": "changelist"}).find_next_sibling
                if old_change:
                    self.last_change = change_list

                    embed = discord.Embed(title="CS:GO Update", color=discord.Color.green())
                    embed.add_field(name=f"New Change #{change_id}", value=change_list.get_text(strip=True, separator="\n"), inline=False)
                    embed.add_field(name=f"Previous Change #{old_change_id}", value=old_change.get_text(strip=True, separator="\n"), inline=False)
                    embed.set_footer(text="Click the 'Read More' button for more details")

                    channel = self.bot.get_channel(YOUR_CHANNEL_ID)
                    read_more = discord.ui.Button(label="Read More", url=f"https://steamdb.info/app/730/history/?changeid={change_id}")
                    view = discord.ui.View()
                    view.add_item(read_more)

                    await channel.send(embed=embed, view=view)

    @commands.Cog.listener()
    async def on_ready(self):
        print(f'{self.bot.user.name} has connected to Discord!')

    @commands.command(name="currentchange")
    async def current_change(self, ctx):
        if self.last_change:
            change_id = self.last_change.find("a").get("href").split("=")[-1]
            old_change_id = self.last_change.find_next_sibling("div", {"class": "changelist"}).find("a").get("href").split("=")[-1]

            change_date = self.last_change.find("span", {"class": "date"}).get_text()
            change_datetime = datetime.strptime(change_date, "%d %B %Y – %H:%M:%S UTC")
            change_datetime = change_datetime.replace(tzinfo=timezone.utc)

            old_change_date = self.last_change.find_next_sibling("div", {"class": "changelist"}).find("span", {"class": "date"}).get_text()
            old_change_datetime = datetime.strptime(old_change_date, "%d %B %Y – %H:%M:%S UTC")
            old_change_datetime = old_change_datetime.replace(tzinfo=timezone.utc)

            embed = discord.Embed(title=f"Latest CS:GO Change #{change_id}", color=discord.Color.green())
            embed.description = f"ChangeNumber – {change_id} › {old_change_id}\n{change_datetime.humanize()} ago\n{change_list.get_text(strip=True, separator='\n')}\n\nPrevious Change #{old_change_id}\n{old_change_datetime.humanize()} ago"
            await ctx.send(embed=embed)
        else:
            await ctx.send("No change details found.")

async def setup(bot):
    await bot.add_cog(SteamDBCommand(bot))
